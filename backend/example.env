GET_VALUE_FROM_SECRET_MANAGER= "" #OPTIONAL- Default_Value = False -- True to get all secret variable values from secret manager if available then try to get from env.
OPENAI_API_KEY = "" #OPTIONAL- Default_Value = "openai_api_key"  #This is required if you are using openai embedding model
EMBEDDING_MODEL = "" #OPTIONAL- Default_Value =""  #this can be openai or vertexai or by default all-MiniLM-L6-v2
RAGAS_EMBEDDING_MODEL = "" #OPTIONAL- Default_Value ="openai"  #Keep blank if you want to use all-MiniLM-L6-v2 for ragas embeddings
IS_EMBEDDING = "" #OPTIONAL- Default_Value ="True" --Flag to enable text embedding
BUCKET_UPLOAD_FILE = "" #OPTIONAL- Default_Value ="gcs bucket name" -- use the gcs bucket to upload local file to gcs cloud
BUCKET_FAILED_FILE = "" #OPTIONAL- Default_Value ="gcs bucket name" -- use the gcs bucket for failed file while extraction
KNN_MIN_SCORE = "" #OPTIONAL- Default_Value ="0.8" --Minimum score for KNN algorithm 
GEMINI_ENABLED = "" #OPTIONAL- Default_Value ="False"-- Enable Gemini can be False or True
GCP_LOG_METRICS_ENABLED = "" #OPTIONAL- Default_Value = "False" -- Enable to logs metrics on gcp cloud logging
NEO4J_URI = "" #OPTIONAL- Default_Value ="Neo4j URL"
NEO4J_USERNAME = "" #OPTIONAL- Default_Value = "Neo4J database username"
NEO4J_PASSWORD = "" #OPTIONAL- Default_Value = "Neo4j database user password"
NEO4J_DATABASE = "" #OPTIONAL- Default_Value = "Neo4j database user database"
LANGCHAIN_API_KEY ="" #OPTIONAL- Default_Value = "API key for Langchain"
LANGCHAIN_PROJECT ="" #OPTIONAL- Default_Value = "Project for Langchain "
LANGCHAIN_TRACING_V2 = "" #OPTIONAL- Default_Value = "Flag to enable Langchain tracing "
LANGCHAIN_ENDPOINT = "" #OPTIONAL- Default_Value = "https://api.smith.langchain.com" -- Endpoint for Langchain API
GCS_FILE_CACHE = "" #OPTIONAL- Default_Value = "False" #save the file into GCS or local, SHould be True or False
USER_AGENT="" #OPTIONAL- Default_Value = "LLM-Graph-Builder"
ENABLE_USER_AGENT = "" #OPTIONAL- Default_Value = "False"
MAX_TOKEN_CHUNK_SIZE="" #OPTIONAL- Default_Value = "10000" #Max token used to process/extract the file content.
ENTITY_EMBEDDING="" #OPTIONAL- Default_Value = "False"-- Value based on whether to create embeddings for entities suitable for entity vector mode
DUPLICATE_SCORE_VALUE = "" #OPTIONAL- Default_Value = "0.97" -- Node score value to match duplicate node
DUPLICATE_TEXT_DISTANCE = "" #OPTIONAL- Default_Value = "3" --This value used to find distance for all node pairs in the graph and calculated based on node properties
DEFAULT_DIFFBOT_CHAT_MODEL="" #OPTIONAL- Default_Value = "openai_gpt_4o"  #whichever model specified here , need to add config for that model in below format)
GRAPH_CLEANUP_MODEL="" #OPTIONAL- Default_Value = "openai_gpt_4o" -- Model name to clean-up graph in post processing
BEDROCK_EMBEDDING_MODEL="" #Mandatory - Default_Value = "model_name,aws_access_key,aws_secret_key,region_name" -- If want to use bedrock embedding #model_name="amazon.titan-embed-text-v1"
YOUTUBE_TRANSCRIPT_PROXY="" #Mandatory --Proxy key required to process youtube video for getting transcript --Sample Value ="https://user:pass@domain:port"
EFFECTIVE_SEARCH_RATIO="" #OPTIONAL- Default_Value = "2"

LLM_MODEL_CONFIG_model_version=""
#examples
LLM_MODEL_CONFIG_openai_gpt_3.5="gpt-3.5-turbo-0125,openai_api_key"
LLM_MODEL_CONFIG_openai_gpt_4o_mini="gpt-4o-mini-2024-07-18,openai_api_key"
LLM_MODEL_CONFIG_openai_gpt_4o="gpt-4o-2024-11-20,openai_api_key"
LLM_MODEL_CONFIG_openai-gpt-o3-mini="o3-mini-2025-01-31,openai_api_key"
LLM_MODEL_CONFIG_gemini_1.5_pro="gemini-1.5-pro-002"
LLM_MODEL_CONFIG_gemini_1.5_flash="gemini-1.5-flash-002"
LLM_MODEL_CONFIG_gemini_2.0_flash="gemini-2.0-flash-001"
LLM_MODEL_CONFIG_diffbot="diffbot,diffbot_api_key"
LLM_MODEL_CONFIG_azure_ai_gpt_35="azure_deployment_name,azure_endpoint or base_url,azure_api_key,api_version"
LLM_MODEL_CONFIG_azure_ai_gpt_4o="gpt-4o,https://YOUR-ENDPOINT.openai.azure.com/,azure_api_key,api_version"
LLM_MODEL_CONFIG_groq_llama3_70b="model_name,base_url,groq_api_key"
LLM_MODEL_CONFIG_anthropic_claude_3_5_sonnet="model_name,anthropic_api_key"
LLM_MODEL_CONFIG_fireworks_llama_v3_70b="model_name,fireworks_api_key"
LLM_MODEL_CONFIG_bedrock_claude_3_5_sonnet="model_name,aws_access_key_id,aws_secret__access_key,region_name"
LLM_MODEL_CONFIG_ollama_llama3="model_name,model_local_url"
LLM_MODEL_CONFIG_bedrock_nova_micro_v1="model_name,aws_access_key,aws_secret_key,region_name"        #model_name="amazon.nova-micro-v1:0"
LLM_MODEL_CONFIG_bedrock_nova_lite_v1="model_name,aws_access_key,aws_secret_key,region_name"         #model_name="amazon.nova-lite-v1:0"
LLM_MODEL_CONFIG_bedrock_nova_pro_v1="model_name,aws_access_key,aws_secret_key,region_name"          #model_name="amazon.nova-pro-v1:0"
LLM_MODEL_CONFIG_fireworks_deepseek_r1="model_name,fireworks_api_key"      #model_name="accounts/fireworks/models/deepseek-r1"
LLM_MODEL_CONFIG_fireworks_deepseek_v3="model_name,fireworks_api_key"      #model_name="accounts/fireworks/models/deepseek-v3"