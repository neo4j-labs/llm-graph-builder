// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-docker-compose
{
	"name": "Graph Builder VSCODE debug and local neo4j setup",

	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"docker-compose-vscode.yml"
	],

	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "backend",

	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/code",


	// Features to add to the dev container. More info: https://containers.dev/features.
// "features": {
//     "ghcr.io/devcontainers/features/python:1": {}
// },

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [8000, 5678],  // Forward the debug port

	// Uncomment the next line if you want start specific services in your Docker Compose config.
	"runServices": ["neo4j", "backend", "frontend"],

	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	"shutdownAction": "stopCompose",

	//Uncomment the next line to run commands after the container is created.
	"postCreateCommand": "./setup_backend_container.sh",  
	"onCreateCommand": "./clean_backend_container_residual_files.sh",
	// "initializeCommand": "\"C:\\Program Files\\Git\\bin\\bash.exe\" -c '${workspaceFolder}/.devcontainer/clean_backend_container_residual_files.bat'",
	// Configure tool-specific properties.
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",          // Python extension                
				"ms-python.debugpy",          // Python extension
                "ms-python.vscode-pylance",  // Pylance for better Python language support
                "ms-azuretools.vscode-docker", // Docker support
                "ms-vscode-remote.remote-containers" // Remote Containers support
            ],
            "settings": {
                "terminal.integrated.shell.linux": "/bin/bash"
            }
        }
    },

	"overrideCommand": true


	
	// Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "devcontainer"


	
}
